package repo

{{- $golangAPIModuleOptions := index .Basic.Options.module "@well-known/golang-api"}}

{{- $repoPkgPath := $golangAPIModuleOptions.golang.repoPackagePath -}}

{{- $modelPkgPath := $golangAPIModuleOptions.golang.modelPackagePath -}}

import (
  "context"

  "github.com/mitchellh/mapstructure"
  "github.com/pkg/errors"
  model "{{$modelPkgPath}}"
  "github.com/innovation-upstream/api-frame/service/data/storage"
  "github.com/innovation-upstream/api-frame/service/data/storage/field"
  "github.com/innovation-upstream/api-frame/service/data/storage/query"
)

const {{.Basic.ModCamel}}Collection = "{{.Basic.ModSnake}}"

//go:generate mockgen -destination=../mock/{{.Basic.ModSnake}}_repo_mock.go -package=mock {{$repoPkgPath}} {{.Basic.ModCamel}}Repo
type {{.Basic.ModCamel}}Repo interface {
  {{.Sections.interface}}
}

type {{.Basic.ModLowerCamel}}Repo struct {
  storage storage.Storage
}

func New{{.Basic.ModCamel}}Repo(s storage.Storage) {{.Basic.ModCamel}}Repo {
  return &{{.Basic.ModLowerCamel}}Repo{
    storage: s,
  }
}

{{.Sections.method}}

